/*
 * =====================================================================================
 *
 *       Filename:  simple.h
 *
 *    Description:  En-tête pour une liste simplement chaînée
 *
 *        Version:  1.0
 *        Created:  29.12.2013 20:57:40
 *       Revision:  none
 *       Compiler:  clang
 *
 *         Author:  Loïc BARTOLETTI (), coder@tuxfamily.org
 *   Organization:
 *
 * =====================================================================================
 */


#include <stdio.h>
#include <stdlib.h>

typedef struct _sl_elem
{
    void *data;
    struct _sl_elem *next;
} SList_elem;				/* ----------  end of struct sll  ---------- */



typedef struct _SList
{
    SList_elem *start;
    SList_elem *elem;
    long nb_elem;
} SList;				/* ----------  end of struct liste_simple  ---------- */


SList *SList_new(void);
int SList_append( SList *list, void *data); /* Add a new element on to the end of the list */
int SList_prepend( SList *list, void *data); /* Add a new element on to the start of the list */
int SList_insert( SList *list, void *data, unsigned int position); /* Insert a new element into the list at the given position */
int SList_remove( SList *list, void *data); /* Removes an element from a SList. If two elements contain the same data, only the firt is removed. If none of the elements contain the data, the SList is unchanged. */
int SList_remove_all( SList *list, void *data); /* Same as SList_remove but, removes all elements contains the data */
void SList_free( SList *list); /* Free all of the memory used by a SList */
unsigned int SList_length( SList *list); /* Returns the number of elements in a SList */
int SList_reverse(SList *list); /* Reverses a SList */
unsigned int SList_first(SList *list); /* Gets the first element in a SList */
unsigned int SList_last(SList *list); /* Gets the last element in a SList */
unsigned int SList_index(SList *list, void* data); /* Gets the position of the element containing the given data (starting from 0) */

/* TODO : A SUPPRIMER */
void display_liste( SList *list); /* Affiche la liste */
