#!/usr/bin/env Rscript 
# utilisation : graph.R <nom du fichier vitesses> <vitesse max autorisée> <dossier où stocker les pdf>
argv <- commandArgs(TRUE)

# Définitions constantes
vit_max <- as.integer(argv[2])
# Définition des couleurs
couleurs <- heat.colors(3) # jaune, orange, rouge
couleurs <- c(couleurs, "black", "green") # ajout pour les vMax et vMoy

# Chargement des données
test <- read.table(argv[1], header=TRUE, sep=";", stringsAsFactors=FALSE)
# Création d'un index sur les données (répartition par heure)
test$index <- 1:nrow(test)
# Découpage des valeurs VITESSES qui sont séparées par un espace
test2 <- strsplit(test$VITESSES, split=" ")
# Conversion des valeurs VITESSES en entier
test3 <- lapply(test$index, function(x)return(data.frame(index=x, VITESSES=as.integer(test2[[x]]))))
# Remise en forme du tableau temporaire
test3 <- do.call(rbind, test3)
# Création d'un data frame fusionnant les informations
test4 <- merge(test[, c("index", "JOUR", "HEURES", "NB_VITESSE_PLAGE")], test3)

# Création du répertoire enregistrant les fichiers pdf
# le nom est composé de la date du premier et du dernier enregistrement
format_date <- "%d/%m/%Y"
dir_pdf <- argv[3]
# Création du répertoire
dir.create(dir_pdf)
# Le logiciel se déplace dans le répertoire
setwd(dir_pdf)

for (graph_jour in unique(test4$JOUR))
{
    pdf(file=paste(strptime(graph_jour, format=format_date), "pdf", sep = "."))
    # Création du graphique
    # Agrandit la marge du bas pour faire de la place pour les étiquettes inclininées des x
    par(mar = c(7, 4, 4, 2) + 0.5)
    # Définit un style de boîte, test4$index en X, test4$valeurs en Y
    par(col="black", lab=c(max(test4$index),max(test4$VITESSES),1))
    # Création du label pour le titre
    titre_graph <- paste("Vitesses enregistrées le", graph_jour, sep =" ")
    
    # Créer un graphique sans axe des X et sans étiquette des Y
    plot.new()
    plot.window(xlim = c(1, max(test4$index)-min(test4$index)), ylim = c(0, ceiling(max(test4$VITESSES)/10)*10))
    
    par(new=TRUE)

    
    # Dessin des points des vitesses
    plot(test4$VITESSES[test4$JOUR==graph_jour] ~ test4$index[test4$JOUR==graph_jour], xaxp=c(min(test4$index[test4$JOUR==graph_jour]), max(test4$index[test4$JOUR==graph_jour]),1), yaxp = c(0, ceiling(max(test4$VITESSES)/10)*10, ceiling(max(test4$VITESSES)/10)), main = titre_graph, ylab = "Vitesses en Km/h", xaxt= "n", xlab = "")
    # Dessin des lignes pour les vitesses
    for(i in seq(0, ceiling(max(test4$VITESSES)/10)*10, 10)){
        abline(h = i, col = "grey")
    }
    # Création du vecteur des étiquettes 
    text(min(test4$index[test4$JOUR==graph_jour]):max(test4$index[test4$JOUR==graph_jour]), par("usr")[3] - 1.5, srt = 45, adj = 1, labels = unique(test4$HEURES[test4$JOUR==graph_jour]), xpd= TRUE)
    # Rajoute un sous-titre en bas, à la sixième ligne de marge (sur 7)
    mtext(1, text = "Heures", line = 6)
    # Création de la ligne indiquant la vitesse max (ex. 50 Km/h)
    segments(x0=min(test4$index),y0=vit_max, x1=max(test4$index), y1=vit_max, col="purple")
    # Calcul des moyennes par heures
    mean_test <- c() # Création d'un vecteur Null pour enregistrer les moyennes
    max_test <- c() # Création d'un vecteur Null pour enregistrer les vitesses max.
    vQuant <- c() # Création d'un vecteur Null pour enregistrer les quantiles (V85, V50, V30)
    for (v in unique(test4$index[test4$JOUR==graph_jour]))
    {
        mean_test <- c(mean_test, mean(test4$VITESSES[test4$index==v]))
        max_test <- c(max_test, max(test4$VITESSES[test4$index==v]))
        vQuant <- cbind(vQuant, quantile(test4$VITESSES[test4$index==v], probs=c(0.30,0.50,0.85), type=1))
    }

    # Courbe vitesse moyenne
    points(min(test4$index[test4$JOUR==graph_jour]):max(test4$index[test4$JOUR==graph_jour]),mean_test, type="b", pch=".", col=couleurs[5])
    # Courbe vitesse max
    points(min(test4$index[test4$JOUR==graph_jour]):max(test4$index[test4$JOUR==graph_jour]),max_test, type="l", col=couleurs[4])
    # Courbe v30
    points(min(test4$index[test4$JOUR==graph_jour]):max(test4$index[test4$JOUR==graph_jour]),vQuant[1,], type="l", col=couleurs[3])
    # Courbe v50
    points(min(test4$index[test4$JOUR==graph_jour]):max(test4$index[test4$JOUR==graph_jour]),vQuant[2,], type="l", col=couleurs[2])
    # Courbe v85
    points(min(test4$index[test4$JOUR==graph_jour]):max(test4$index[test4$JOUR==graph_jour]),vQuant[3,], type="l", col=couleurs[1])
    g <- dev.off()
    
    #A TERMINER
    csv_jour <- cbind(mean_test, max_test, vQuant)
    csv_jour$JOUR <- graph_jour


    write.csv2(csv_jour, file=paste(strptime(graph_jour, format=format_date), "csv", sep="."))
}

# Création d'un rapport sur la période
periode <-paste(strptime(test4[1,]$JOUR, format=format_date), strptime(test4[nrow(test4),]$JOUR, format=format_date), sep=" au ")

# Top 10 des vitesses enregistrées
top_10 <- tail(sort(test4$VITESSES), 10)
cat("Top 10 des vitesses enregistrées\nDu ", periode, "\n", top_10, file="rapport.txt")
# Vitesses > 100
vit_100 <- test4[test4$VITESSES > 100, c("JOUR", "HEURES", "VITESSES")]
write.csv(vit_100, file="vit_100.csv")

# Camembert vitesse
pdf(file=paste(paste(periode, "pie", sep="-"), "pdf", sep = "."))
pie.vit <-c(nrow(test4[test4$VITESSES < 30,])/nrow(test4), nrow(test4[test4$VITESSES > 31 & test4$VITESSES < 50,])/nrow(test4), nrow(test4[test4$VITESSES > 51 & test4$VITESSES < 70,])/nrow(test4), nrow(test4[test4$VITESSES > 71,])/nrow(test4))
names(pie.vit) <- c("<= 30 km/h", "31 - 50 km/h", "51 - 70 km/h", "> 70 km/h")
pie(pie.vit, col = c("purple", "violetred1", "green3", "cyan"))
title(main = "Evaluation de la fréquence", cex.main = 1.8, font.main = 1)
titre <- paste("Vitesses du", periode, sep =" ")
title(xlab = titre, cex.lab= 0.8, font.lab = 3)
g <- dev.off()

# Histogramme de la période
pdf(file=paste(periode, "pdf", sep = "."))
# Création du graphique
nb_jour = length(unique(test4$JOUR))
# Calcul des moyennes par heures
mean_test <- c() # Création d'un vecteur Null pour enregistrer les moyennes
max_test <- c() # Création d'un vecteur Null pour enregistrer les vitesses max.
vQuant <- c() # Création d'un vecteur Null pour enregistrer les quantiles (V85, V50, V30)
id_jour = 1
for (v in unique(test4$JOUR))
{
    test4$id_jour[test4$JOUR==v] <- id_jour
    mean_test <- c(mean_test, mean(test4$VITESSES[test4$JOUR==v & test4$NB_VITESSE_PLAGE>0]))
    max_test <- c(max_test, max(test4$VITESSES[test4$JOUR==v]))
    vQuant <- cbind(vQuant, quantile(test4$VITESSES[test4$JOUR==v], probs=c(0.30,0.50,0.85), type=1))
    id_jour = id_jour +1
}
# Agrandit la marge du bas pour faire de la place pour les étiquettes inclininées des x
par(mar = c(7, 4, 4, 2) + 0.5)
# Définit un style de boîte, test4$index en X, test4$valeurs en Y
par(col="black", lab=c(nb_jour,max(test4$VITESSES),1))
# Création du label pour le titre
titre_graph <- paste("Vitesses enregistrées du", periode, sep =" ")
# Créer un graphique sans axe des X et sans étiquette des Y
plot.new()
plot.window(xlim = c(1, nb_jour), ylim = c(min(test4$VITESSES),max(test4$VITESSES)))
for(i in seq(min(test4$VITESSES),max(test4$VITESSES), 10)){
    abline(h = i, col = "grey")
}

par(new=TRUE)
plot(test4$VITESSES ~ test4$id_jour, type="n", yaxp = c(0, ceiling(max(test4$VITESSES)/10)*10, ceiling(max(test4$VITESSES)/10)), main = titre_graph, ylab = "Vitesses en Km/h", xaxt= "n", xlab = "")
# Création du vecteur des étiquettes 
text(1:nb_jour, par("usr")[3] - 1.5, srt = 45, adj = 1, labels = unique(test4$JOUR), xpd= TRUE)
# Rajoute un sous-titre en bas, à la sixième ligne de marge (sur 7)
mtext(1, text = "Heures", line = 6)
# Création de la ligne indiquant la vitesse max (ex. 50 Km/h)
abline(h = vit_max, col = "purple")

# Courbe vitesse moyenne
points(1:nb_jour,mean_test, type="b", pch=".", col=couleurs[5])
# Courbe vitesse max
points(1:nb_jour,max_test, type="l", col=couleurs[4])
# Courbe v30
points(1:nb_jour,vQuant[1,], type="l", col=couleurs[3])
# Courbe v50
points(1:nb_jour,vQuant[2,], type="l", col=couleurs[2])
# Courbe v85
points(1:nb_jour,vQuant[3,], type="l", col=couleurs[1])
legend("bottomleft", legend=c("v85", "v50", "v30", "vMax", "vMoyenne"), fill=couleurs, bg=c("white"))


g <- dev.off()

